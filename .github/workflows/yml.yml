name: Hourly Instagram Scrape

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # every hour at minute 0 (UTC)

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install Google Chrome and matching ChromeDriver
      - name: Set up Chrome + ChromeDriver
        id: setup-chrome
        uses: browser-actions/setup-chrome@v2
        with:
          install-dependencies: true
          install-chromedriver: true
          chrome-version: stable

      - name: Show browser paths
        run: |
          echo "Chrome: ${{ steps.setup-chrome.outputs.chrome-path }}"
          echo "ChromeDriver: ${{ steps.setup-chrome.outputs.chromedriver-path }}"
          ${{ steps.setup-chrome.outputs.chrome-path }} --version
          ${{ steps.setup-chrome.outputs.chromedriver-path }} --version

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager requests

      - name: Run scraper
        env:
          CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
          CHROMEDRIVER_PATH: ${{ steps.setup-chrome.outputs.chromedriver-path }}
        run: python main.py

      # Add this step to upload the screenshot if the script fails
      - name: Upload screenshot on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-screenshot
          path: error_screenshot.png
          retention-days: 7

      # Persist the CSV log
      - name: Upload profile log
        uses: actions/upload-artifact@v4
        with:
          name: profile-log
          path: profile_log.csv

      # Persist all downloaded pictures
      - name: Upload profile pictures
        uses: actions/upload-artifact@v4
        with:
          name: profile-pics
          path: profile_pics/
